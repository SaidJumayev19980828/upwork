database.properties = ./database.properties
payment.properties_dir = /

email.dryrun     = true
email.recoveryurl = https://www.nasnav.com/password_recovery?token=
email.ssl        = true
email.port       = 25
email.hostname   = mail.nasnav.com
email.username   =
email.password   = xxxxxx
email.mailfrom   = customer-service@nasnav.com
email.activationurl = /user/v2/register/activate
files.basepath 	 = src/test/resources/test_imgs_save_dir

cookies.secureToken = false

environment.development = true

dashbaord.order.page=dashboard/orders/{order_id}

nasnav.elasticsearch.url = http://127.0.0.1:9200


spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

spring.security.oauth2.client.registration.google.clientId=dummyId.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=abcSECRETcba
spring.security.oauth2.client.registration.google.redirectUriTemplate={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile,openid

#will need a DB user with privileges to manipulate the database structure
spring.liquibase.user=nasnav
spring.liquibase.password=nasnav
spring.liquibase.url=jdbc:postgresql://localhost/nasnav
spring.liquibase.liquibaseSchema=public
spring.liquibase.enabled=true
logging.level.liquibase=info

# Firebase Config
firebase-config=firebase.json

frontend.setting.path=${file-path}



##stripe
stripe.apikey = sk_test_51NxqlfGR4qGEOW4E6Qni6REIWcwheVdU8mf2LtTVn1BWn8dtdQSg7stf9b0cqE8CJZVja9aTuOISKg15qC52CjLf00bmLe17sU
stripe.webhook.secret= whsec_c6c1772b65026654a21e1beac00f0a213eacbb56edd1bca45a8fdfd10fdb1c6c