variables:
  VERSION: "1.0"
  POSTGRES_DB: nasnav-tests
  POSTGRES_USER: nasnav
  POSTGRES_PASSWORD: nasnav
  POSTGRES_HOST_AUTH_METHOD: trust
  MAVEN_OPTS: -Dmaven.repo.local=/cache/.m2/repository

stages:
  - test
  - visualize-coverage
  - compile
  - build
  - deploy

test:maven:
  stage: test
  services:
    - postgres:15.2-alpine
  image: maven:3.8.5-openjdk-17
  script:
    - mvn --version
    - cp ./deploy/properties-test/* ./nasnav/src/main/resources/
    - cp ./deploy/properties-test/* ./yeshtery/src/main/resources/
    - mvn -B --no-transfer-progress test
    - ./coverage.sh report-aggregate/target/site/jacoco-aggregate/jacoco.csv
  coverage: '/Code coverage: \d+\.\d+/'
  artifacts:
    when: always
    paths:
      - report-aggregate/target/site/jacoco-aggregate/jacoco.xml
    reports:
      junit:
        - nasnav/target/surefire-reports/TEST-*.xml
        - yeshtery/target/surefire-reports/TEST-*.xml
  tags:
    - meetusvr
    - docker
  only:
    - nasnav-develop
    - review
    - merge_requests
    - java-17-migration

test:coverage:
  stage: visualize-coverage
  interruptible: true
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
  script:
    # convert report from jacoco to cobertura, using relative project path
    - 'python /opt/cover2cover.py $CI_PROJECT_DIR/report-aggregate/target/site/jacoco-aggregate/jacoco.xml
        $CI_PROJECT_DIR/nasnav-services/src/main/java/
        $CI_PROJECT_DIR/nasnav/src/main/java/
        $CI_PROJECT_DIR/yeshtery/src/main/java/
        > $CI_PROJECT_DIR/report-aggregate/target/site/cobertura.xml'
  needs: ["test:maven"]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: report-aggregate/target/site/cobertura.xml
  tags:
    - meetusvr
    - docker
  only:
    - java-17-migration
    - nasnav-develop
    - tests
    - merge_requests


build:compile:
  stage: compile
  image: docker:20.10.16
  script:
    - rm -rf ./nasnav/src/main/resources/sample.*
    - rm -rf ./yeshtery/src/main/resources/sample.*
    - cp ./deploy/properties/*.properties ./nasnav/src/main/resources/
    - cp ./deploy/properties/*.properties ./yeshtery/src/main/resources/
    - sh ./deploy/docker_build.sh
  artifacts:
    reports:
      dotenv: build/env
  only:
    - review
    - develop
    - uat
    - prod
  tags:
    - meetusvr
    - docker

build:publish:
  image: docker:20.10.16
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - sh ./deploy/docker_publish.sh
  only:
    - review
    - develop
    - uat
    - prod
  tags:
    - meetusvr
    - docker

deploy:develop:
  image: curlimages/curl:8.00.1
  stage: deploy
  script:
    - |
      curl -X POST --fail -F ref=main \
      -F "token=$VAR_DEVELOP_DEPLOY_TOKEN" \
      -F "variables[MEETUSVR_BACKEND_ENV]=$CI_COMMIT_BRANCH" \
      -F "variables[MEETUSVR_BACKEND_IMAGE_TAG_FQN]=$IMAGE_TAG_FQN" \
      -F "variables[UPSTREAM_PROJECT_PATH]=$CI_PROJECT_PATH" \
      "https://gitlab.com/api/v4/projects/42584610/trigger/pipeline"
  only:
    - develop
    - review
    - uat
  tags:
    - meetusvr
    - docker

deploy:
  stage: deploy
  trigger:
    project: meetusvr/devops
    branch: main
    strategy: depend
  variables:
    MEETUSVR_BACKEND_ENV: $CI_COMMIT_BRANCH
    MEETUSVR_BACKEND_IMAGE_TAG_FQN: $IMAGE_TAG_FQN
    UPSTREAM_PROJECT_PATH: $CI_PROJECT_PATH
  only:
    - prod
